package org.pentaho.pac.client.i18n;

import com.google.gwt.i18n.client.Messages;

public interface PacLocalizedMessages extends Messages {
  String usersAndRoles();
  String dataSources();
  String services();
  String scheduler();
  String ok();
  String cancel();
  String yes();
  String no();
  String administration();
  String home();
  String test();
  String security();
  String securityRefreshError(String cause);
  String invalidTabIndex(int index);
  String addRole();
  String invalidRoleName();
  String insufficientPrivileges();
  String roleAlreadyExists();
  String roleName();
  String description();
  String update();
  String confirmRoleDeletionMsg();
  String deleteRoles();
  String assignedUsers();
  String roleDoesNotExist(String roleName);
  String updateRole();
  String cantAssignNonexistingUserToRole(String userName);
  String userListFilter();
  String roles();
  String refreshSolutionRepository();
  String removeStaleContent();
  String purgeMondrianDataCache();
  String purgeMondrianSchemaCache();
  String scheduleDailyRepositoryCleaning();
  String restoreDefaultFilePermissions();
  String refreshSystemSettings();
  String executeGlobalActions();
  String refreshReportingMetadata();
  String addUser();
  String invalidUserName();
  String passwordConfirmationFailed();
  String userAlreadyExist();
  String userName();
  String password();
  String passwordConfirmation();
  String deleteUsers();
  String confirmUserDeletionMsg();
  String roleListFilter();
  String assignedRoles();
  String userDoesNotExist(String userName);
  String updateUser();
  String jndiName();
  String maxActiveDbConnections();
  String jdbcDriverClass();
  String numIdleDbConnnections();
  String dbUserName();
  String dbPassword();
  String dbUrl();
  String dbValidationQuery();
  String dbWaitTime();
  String errorLoadingDataSources();
  String dataSourcesRefreshError(String cause);
  String deleteDataSources();
  String confirmDataSourceDeletionMsg();
  String errorDeletingDataSource();
  String updateDataSource();
  String invalidConnectionName();
  String missingDbUrl();
  String missingDbDriver();
  String missingDbUserName();
  String errorUpdatingDataSource();
  String testConnection();
  String connectionTestSuccessful();
  String addDataSource();
  String errorCreatingDataSource();
  
}
