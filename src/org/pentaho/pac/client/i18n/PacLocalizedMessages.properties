usersAndRoles=Users & Roles
dataSources=Data Sources
services=Services
scheduler=Scheduler
ok=OK
advanceDb=Advance
cancel=Cancel
yes=Yes
no=No
administration=Administration
home=Home
test=Test
invalidToggleButton=Error: onClick() trying to handle unrecognized widget.
security=Security
securityRefreshError=Unable to refresh security information: {0}
deleteDataSources=Delete Data Sources
Are your sure you want to delete the selected data sources?=Are your sure you want to delete the selected data sources?
invalidTabIndex=Invalid tab index: {0}
addRole=Add Role
invalidRoleName=Invalid role name.;
insufficientPrivileges=Insufficient privileges.
roleAlreadyExists=Role already exists.
roleName=Role Name
description=Description
update=Update
confirmRoleDeletionMsg=Are your sure you want to delete the selected roles?
deleteRoles=Delete Roles
assignedUsers=Assigned Users
roleDoesNotExist=Role does not exist: {0} 
cantAssignNonexistingUserToRole=Can not assign non-existing user to role: {0}
filter=Filter:
filterBy=Filter By:
users=Users
roles=Roles
clickEditUsers=Click to edit users.
clickEditRoles=Click to edit roles.
refreshSolutionRepository=Refresh Solution Repository
removeStaleContent=Remove Stale Conent
purgeMondrianDataCache=Purge Mondrian Data Cache
purgeMondrianSchemaCache=Purge Mondrian Schema Cache
scheduleDailyRepositoryCleaning=Schedule Daily Repository Cleaning
restoreDefaultFilePermissions=Restore Default File Permissions
refreshSystemSettings=Refresh System Settings
executeGlobalActions=Execute Global Actions
refreshReportingMetadata=Refresh Reporting Metadata
addUser=Add User
invalidUserName=Invalid user name.
passwordConfirmationFailed=Password does not match password confirmation.
userAlreadyExist=User already exists.
userName=User Name
password=Password
passwordConfirmation=Password Confirmation
deleteUsers=Delete Users
confirmUserDeletionMsg=Are your sure you want to delete the selected users? Restart of a PCI will be required for this change to take effect in the PCI
assignedRoles=Assigned Roles
userDoesNotExist=User does not exist: {0}
updateUser=Update User
updateRole=Update Role
jndiName=Name:
maxActiveDbConnections=Maximum Active Connections:
jdbcDriverClass=Driver Class:
numIdleDbConnnections=Number of Idle Connections:
dbUserName=User Name:
dbPassword=Password:
dbUrl=URL:
dbValidationQuery=Validation Query:
dbWaitTime=Wait: (milliseconds)
errorLoadingDataSources=Error Loading Data Sources
dataSourcesRefreshError=Unable to refresh data sources list: {0}
updateDataSource=Update Data Source
invalidConnectionName=Invalid connection name.
missingDbUrl=Missing database URL.
missingDbDriver=Missing database driver class.
missingDbUserName=Missing user name.
errorUpdatingDataSource=Error Updating Data Source
testConnection=Test Connection
connectionTestSuccessful=Connection Test Successful.
addDataSource=Add Data Source
errorCreatingDataSource=Error Creating Data Source
confirmRemoveRoleAssignmentMsg=Are your sure you want to remove the selected user(s) from the selected role(s)?
removeRoles=Remove Roles
removeUsers=Remove Users

# begin scheduler admin
scheduleName=Name
scheduleGroupName=Group
description=Description
nextFireTime=Next Fire Time
lastFireTime=Last Fire Time
state=State
subscriberCount=# Subscribers
loading=Loading...
error=Error
actions=Actions
status=Status
suspend=Suspend
working=Working...
resume=Resume
delete=Delete
runNow=Run Now
suspendAllJobs=Suspend All Jobs
resumeAllJobs=Resume All Jobs
allJobsSuspended=All Jobs Suspended
allJobsResumed=All Jobs Resumed
noSchedules=No schedules.
running=Running
notRunning=Not running
schedulerStatus=Scheduler Status
failedToLoadHome=Unable to load Home page, reason: {0}
biServerAlive=BI Server is available.
biServerDead=BI Server is is NOT available.
deleteJob=Delete Job
# next 2 must match corresponding property in messages.properties on the server
stateSuspended=Suspended
XmlSerializer.stateNone=None
checkToSelectAll=Check to select all rows
am=AM
pm=PM
sunday=Sunday
monday=Monday
tuesday=Tuesday
wednesday=Wednesday
thursday=Thursday
friday=Friday 
saturday=Saturday
january=January
february=February
march=March
april=April
may=May
june=June
july=July
august=August
september=September
october=October
november=November
december=December
first=first
second=second
third=third
fourth=fourth
last=last
invalidStringForTimeOfDay=Invalid String for time of day value: {0}. 
invalidStringForWeekOfMonth=Invalid String for week of month: {0}. 
invalidStringForRecurrenceType=Invalid String for RecurrenceType: {0}. 
invalidNumTokens=Invalid number of tokens.
invalidSecondsToken=Seconds token must be an integer between 0 and 59, but it is: {0}. 
invalidMinutesToken=Minute token must be an integer between 0 and 59, but it is: {0}. 
invalidHoursToken=Hours token must be an integer between 0 and 23, but it is: {0}.
invalidDayOfMonth=Invalid day of month: {0}. 
invalidDayOfMonthForRecurrenceType=getDayOfMonth() not valid for recurrence type: {0}.
invalidDayOfWeek=Invalid day of week: {0}. 
invalidDayOfWeekForRecurrenceType=getDaysOfWeek() not valid for recurrence type: {0}. 
invalidWeekOfMonth=Invalid week of month: {0}. 
invalidWeekOfMonthForRecurrenceType=getWhichWeekOfMonth() not valid for recurrence type: {0}.
invalidMonthOfYearForRecurrenceType=getWhichMonthOfYear() not valid for recurrence type: {0}. 
invalidMonthOfYear=Invalid month of year: {0}.
invalidIntegerToken=Invalid token, must be an integer: {0}.
invalidIntegerListToken=Invalid token, must be a list of integers: {0}.
illegalRecurrenceTypeUnknown=Illegal to call recurrenceStringToCronStr with a RecurrenceType of Unknown.
invalidRecurrenceType=Invalid recurrenceType: {0}.  
scheduleNameAlreadyExists=Schedule with name "{0}" already exists. Select another name.
invalidCronString=Cron string is invalid.
specifyStartDate=Specify a start date.
specifyEndDate=Specify an end date.
mustBeIntegerRange=must be a number greater than 0 and less than 2147483647
mustBeSecondsRange=Seconds must be a number <= {0}.
mustBeMinutesRange=Minues must be a number <= {0}.
mustBeHoursRange=Hours must be a number <= {0}.
days=Days {0}.
oneOrMoreMustBeChecked=One or more days must be checked.
dayOfMonthMustBeBetween=Day of month must be a number between 1 and 31.
unrecognizedSchedType=Unrecognized ScheduleType in RecurrenceEditor.isValid(): {0}.
specifyName=Specify a name.
specifyGroupName=Specify a group name.
unrecognizedSchedTypeInValidator=Unrecognized ScheduleType in ScheduleEditorValidator.isValid(): {0}.
invalidRunType=Invalid Run Type: {0}.
illegalStateMissingCronAndRepeat=Illegal state, must have either a cron string or a repeat time.
scheduleCreator=Schedule Creator
scheduleEditor=Schedule Editor
invalidCronInInitOfRecurrenceDialog=Attempt to initialize the Recurrence Dialog with an invalid CRON string: {0}. Error details: {1}.
cronLabel=Cron String:
notApplicable=n/a
confirmDelete=Confirm Delete
confirmDeleteQuestion=Are you sure you want to delete all checked schedules? There are {0} users subscribed to this schedule.
onlyOneActionSequence=Only allowed to specify one action sequence.
actionSequenceCannotBeEmpty=Action sequence list cannot be empty.
rangeOfRecurrence=Range of recurrence
startLabel=Start:
noEndDateLabel=No end date
endByLabel=End by:
seconds=Seconds
minutes=Minutes
hours=Hours
daily=Daily
weekly=Weekly
monthly=Monthly
yearly=Yearly
runOnce=Run Once
cron=Cron
invalidTemporalValue=Invalid String for temporal value: {0}
startTime=Start Time
recurrencePattern=Recurrence pattern
every=Every
numberOfXToRepeat=Number of {0} to repeat.
secondsLabel=second(s)
minutesLabel=minute(s)
hoursLabel=hour(s)
everyWeekDay=Every weekday
numDaysToRepeat=Number of days to repeat.
daysLabel=day(s)
recurEveryWeek=Recur every week on:
day=Day
the=The
ofEveryMonth=of every month
of=of
invalidTemporalValueInGetRepeatInSecs=Invalid TemporalValue in getRepeatInSecs(): {0}
invalidTemporalValueInGetCronString=Invalid TemporalValue in getCronString(): {0}
invalidRecurrenceString=Invalid recurrence string: {0}
noRadioBtnsSelected=There seems to not be any radio button selected, which is theoretically impossible.
startTimeColon=Start Time:
startDate=Start Date:
schedule=Schedule
scheduledAction=Scheduled Action
recurrenceColon=Recurrence:
descriptionColon=Description:
groupColon=Group:
nameColon=Name:
allGroups=All Groups
createSchedule=Create schedule
editSchedule=Edit schedule
deleteSchedules=Delete schedule(s)
suspendSchedules=Suspend selected schedule(s)
resumeSchedules=Resume selected schedule(s)
runSchedules=Run selected schedule(s) now
suspendScheduler=Suspend scheduler
resumeScheduler=Resume scheduler
refreshScheduleList=Refresh schedule list
loading=Loading...
commaSeparatedList=Comma separated list of action sequence paths:
# for dateFormatLongMedium, see: http://java.sun.com/j2se/1.5.0/docs/api/index.html?java/lang/reflect/package-summary.html
# format string must be consistent with what is produced by calling:
# DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.MEDIUM, <your locale here> )
dateFormatLongMedium=MMM dd, yyyy HH:mm:ss a
# end scheduler admin

availableItemsTitle=Available
assignedItemsTitle=Assigned
toolbarStatus=Server Status:
general=General
advance=Advanced
clickEditGeneral=Click to edit general.
clickEditAdvance=Click to edit advanced.
clickAddGeneral=Click to add general.
clickAddAdvance=Click to add advanced.
userDetails=Details
successfulDataSourceDelete=Successfully Deleted the selected Data Source(s).
successfulDataSourceUpdate=Successfully updated the Data Source.
confirmDataSourceDeletionMsg=Are your sure you want to delete the selected Data Source(s)? If you are using connection pooling in the platform, it will require a server restart inorder for this change to take effect.
errorDeletingDataSource=Error Deleting Data Source
datasourceAdvanceInfo=If any of the fields are left empty, platform will use the default values stored in the pentaho.xml for connection pooling.
cause=Cause
roleCreationFailed=Role creation failed: {0}