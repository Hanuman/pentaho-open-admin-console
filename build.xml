<?xml version="1.0" encoding="UTF-8"?>
<project name="Pentaho Admin Console" default="dist" basedir=".">
	<description>Pentaho Administration Console build process..</description>
	<property file="override.properties" />
	<property file="version.properties" />
	<property file="build.properties" />
	<property file="build-res/version.properties" />

	<path id="classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>
	<!-- ===================================================================
        target: init              
       =================================================================== -->
	<target name="init">

		<mkdir dir="bin" />
		<!--<copy todir="bin">
			<fileset dir="src" includes="**/*.png" />
			<fileset dir="src" includes="**/*.jpg" />
			<fileset dir="src" includes="**/*.gif" />
			<fileset dir="src" includes="**/*.properties" />
			<fileset dir="src" includes="**/*.xml" />
		</copy>-->
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.wars.dir}" />
		<mkdir dir="${build.jars.dir}" />
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<!-- ===================================================================
        target: clean              
    =================================================================== -->

	<target name="clean" depends="clean-test"
	   description="deletes all generated files">
		<delete dir=".gwt-cache"/>
		<!-- generated by GWT -->
		<delete dir="${build}"/>
		<delete dir="${build.classes.dir}"/>
		<delete dir="${build.wars.dir}"/>
		<delete dir="${build.jars.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="tomcat"/>
		<!-- generated by GWT -->
	</target>
	<!-- ===================================================================
        target: clean-test              
    =================================================================== -->

	<target name="clean-test" description="deletes all generated test files">
		<delete dir="${test.reports.dir}"/>
	</target>
	<!-- ===================================================================
        target: compile              
    =================================================================== -->

	<target name="compile" depends="init" description="compiles Java source files to bytecode">
		<javac 
	    		srcdir="${src.dir}" 
	    		destdir="${build.classes.dir}" 
	    		debug="${debug}" 
	    		optimize="${optimize}" 
	    		deprecation="${deprecation}" 
	    		compiler="modern" 
	    		source="1.5" 
	    		target="1.5" 
	    		fork="true"  
	    		classpathref="classpath">
		</javac>
		<!-- Now add *.properties -->
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java">
				<include name="**/locale/**" />
			</fileset>
		</copy>
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>
	<!-- ===================================================================
        target: compile-pac
       =================================================================== -->
	<target name="compile-pac" depends="compile">
		<java classname="com.google.gwt.dev.GWTCompiler" fork="true" maxmemory="512M">
			<classpath>
				<path refid="classpath" />
				<pathelement location="src" />
			</classpath>
			<arg value="-out" />
			<arg value="${gwt.output.dir}" />
			<arg value="%*" />
			<arg value="${pac.app}" />
		</java>
	</target>

	<!-- =================================
          target: jar-console

          Jar the org/pentaho/pac package.
         ================================= -->
	<target name="jar-console" depends="init,compile-pac">
		<jar destfile="${build.jars.dir}/pentaho-admin-console-${release.major.number}.${release.minor.number}.${release.milestone.number}.jar">
			<manifest>
				<attribute name="Implementation-Title" value="${impl.title}" />
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Implementation-Vendor" value="${impl.vendor}" />
				<attribute name="Implementation-ProductID" value="${impl.productID}" />
			</manifest>
			<fileset dir="${build.classes.dir}">
				<!-- include only core -->
				<include name="**/*.class" />
				<include name="**/*.xml" />
			</fileset>
			<fileset dir="${gwt.output.dir}">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>

	<!-- =================================
		 target: jar-messages

		 Jar the org/pentaho/pac/messages package.
		 ================================= -->
	<target name="jar-messages" depends="init, compile-pac">
		<jar destfile="${build.jars.dir}/pentaho-admin-console-messages.jar">
			<manifest>
				<attribute name="Implementation-Title" value="${impl.title}" />
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Implementation-Vendor" value="${impl.vendor}" />
				<attribute name="Implementation-ProductID" value="${impl.productID}" />
			</manifest>
			<fileset dir="${build.classes.dir}">
				<!-- include only messages and locale -->
				<include name="**/locale/**" />
				<include name="**/messages/**" />
			</fileset>
		</jar>
	</target>
	<!-- =================================
		 target: hosted

		 Runs application in a hosted mode
		 ================================= -->

	<target name="hosted" depends="compile"
	    description="runs the application in hosted mode">
		<java classname="com.google.gwt.dev.GWTShell"
	      classpathref="classpath" fork="true">
			<!-- next line is only for Mac OS X -->
			<jvmarg value="-XstartOnFirstThread"/>
			<arg line="-out ./www"/>
			<arg line="${pac.app}/$PentahoAdminConsole.html"/>
		</java>
	</target>

	<!-- =================================
		 target: test

		 Runs JUnit Test
		 ================================= -->

	<target name="test" depends="clean-test,compile"
	    description="runs all JUnit tests">
		<mkdir dir="${test.reports.dir}"/>
		<junit fork="yes" printsummary="yes">
			<!-- next line is only for Mac OS X -->
			<jvmarg value="-XstartOnFirstThread"/>
			<classpath refid="classpath"/>
			<batchtest todir="${test.reports.dir}">
				<fileset dir="src" includes="**/${test}Test.java"/>
			</batchtest>
			<formatter type="xml"/>
		</junit>
		<junitreport toDir="${test.reports.dir}">
			<fileset dir="${test.reports.dir}"/>
			<report format="frames" todir="${test.reports.dir}"/>
		</junitreport>
		<exec os="Windows" executable="cmd.exe">
			<arg line="/c start test/reports/index.html"/>
		</exec>
		<exec os="Mac OS X" executable="open">
			<arg line="-a /Applications/Safari.app test/reports/index.html"/>
		</exec>
	</target>

	<!-- =================================
		 target: dist

		 package up distribution in a zip file
		 ================================= -->

	<target name="dist" depends="jar-console, jar-messages" description="create distribution" >
		<copy todir="${dist.dir}/lib">
			<fileset dir="${build.jars.dir}"/>
			<fileset dir="lib">
				<exclude name="**/test/*"/>
			</fileset>
		</copy>
		<copy todir="${dist.dir}/config">
			<fileset dir="config" includes="pac.properties" />
		</copy>
		<copy todir="${dist.dir}/www/">
			<fileset dir="${gwt.output.dir}" />
		</copy>
		<copy todir="${dist.dir}">
			<fileset dir="build-res"  includes="*.bat"/>
		</copy>
		<zip destfile="${dist.dir}/pentaho-admin-console.zip">
			<zipfileset dir="${dist.dir}" prefix="pentaho-admin-console" />
		</zip>
	</target>

	<!-- =================================
		 target: run

		 Runs Unzips dist output and executes console
		 ================================= -->

	<target name="run" description="Executes the console" depends="unpackConsole">

		<java classname="org.pentaho.pac.server.JettyServer" fork="true" dir="${dist.dir}/exploded/pentaho-admin-console">
			<classpath>
				<fileset dir="${dist.dir}/exploded/pentaho-admin-console/lib/"	includes="**/*.jar"/>
			</classpath>
		</java>
	</target>

	<target name="unpackConsole" description="unzip the distribution">
		<unzip src="${dist.dir}/pentaho-admin-console.zip" dest="${dist.dir}/exploded/"/>
	</target>

</project>