<?xml version="1.0" encoding="UTF-8"?>

<project name="cobertura.examples.basic" default="coverage" basedir=".">
	<tstamp>
		<format property="current.date" pattern="MM-dd-yyyy" locale="en" />
	</tstamp>

	<property file="build_coverage.properties" />

	<path id="pentaho_classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
			<!-- exclude name="**/asm*.jar" / -->
		</fileset>
		<fileset dir="${pentaho.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="console_classpath">
		<fileset dir="${classes.dir}">
			<include name="**/*.class" />
		</fileset>
	</path>

	<path id="test-src-classpath">
		<fileset dir="../metrics/test-src">
			<include name="**/*.java **/*.xml" />
		</fileset>
		<fileset dir="../core/test-src">
			<include name="**/*.java **/*.xml" />
		</fileset>
			<fileset dir="../diagnostics/test-src">
				<include name="**/*.java **/*.xml" />
			</fileset>
			<fileset dir="../solutionrep/test-src">
				<include name="**/*.java **/*.xml" />
			</fileset>
			<fileset dir="../console/test-src">
				<include name="**/*.java **/*.xml" />
			</fileset>
			<fileset dir="../ldapconfig/test-src">
				<include name="**/*.java **/*.xml" />
			</fileset>
		<fileset dir="../skineditor/test-src">
			<include name="**/*.java **/*.xml" />
		</fileset>
		<fileset dir="../settings/test-src">
			<include name="**/*.java **/*.xml" />
		</fileset>
	</path>

	<path id="src-classpath">
		<fileset dir="../metrics/src">
			<include name="**/*.java" />
		</fileset>
		<fileset dir="../core/src">
			<include name="**/*.java" />
		</fileset>
			<fileset dir="../diagnostics/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../solutionrep/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../console/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../ldapconfig/src">
				<include name="**/*.java" />
			</fileset>
		<fileset dir="../skineditor/src">
			<include name="**/*.java" />
		</fileset>
		<fileset dir="../settings/src">
			<include name="**/*.java" />
		</fileset>
	</path>

	<path id="test-lib-classpath">
		<fileset dir="../lib-test">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="pentaho_classpath" resource="tasks.properties" />

	<target name="clean-all" description="Remove all files created by the build/test process.">
		<delete dir="${instrumented.dir}" />
		<delete dir="${reports.dir}" />
		<delete dir="${coverage.dir}" />
		<delete dir="${classes.dir}" />
		<delete dir="${testclasses.dir}" />
		<delete dir="${build.dir}" />
		<delete file="cobertura.log" />
		<delete file="cobertura.ser" />
	</target>

	<target name="clean-pentaho-instrumented-classes">
		<!--
			Remove the coverage data file and any old instrumentation.
		-->
		<delete file="cobertura.ser" />
		<delete dir="${instrumented.dir}" />
	</target>

	<target name="clean-pentaho-test-reports">
		<delete dir="${reports.dir}" />
	</target>

	<target name="clean-pentaho-coverage-reports">
		<delete dir="${coverage.dir}" />
	</target>

	<target name="init-instrument-pentaho-classes" depends="clean-pentaho-instrumented-classes">

		<mkdir dir="pentaho-instrumented-classes" />
	</target>

	<target name="init-pentaho-test-reports" depends="clean-pentaho-test-reports">
		<mkdir dir="${reports.xml.dir}" />
		<mkdir dir="${reports.html.dir}" />		

		<copy todir="${instrumented.dir}/com/pentaho/mgmt">
			<fileset dir="../ui/src/com/pentaho/mgmt" excludes="**/*.java"/>
			<fileset dir="../console/src/com/pentaho/mgmt" excludes="**/*.java"/>
			<fileset dir="../core/src/com/pentaho/mgmt" excludes="**/*.java"/>
			<fileset dir="../diagnostics/src/com/pentaho/mgmt" excludes="**/*.java"/>
		</copy>

		<!-- copy todir="${instrumented.dir}/com/pentaho/mgmt">
			<fileset dir="../ui/src/com/pentaho/mgmt" excludes="**/*.java"/>
			<fileset dir="../console/src/com/pentaho/mgmt" excludes="**/*.java"/>
			<fileset dir="../core/src/com/pentaho/mgmt" excludes="**/*.java"/>
		</copy -->

		<!-- copy todir="${instrumented.dir}/com/pentaho/mgmt">
			<fileset dir="../console/src/com/pentaho/mgmt" excludes="**/*.java"/>
		</copy>

		<copy todir="${instrumented.dir}/com/pentaho/mgmt">
			<fileset dir="../core/src/com/pentaho/mgmt" excludes="**/*.java"/>
		</copy>

		<copy todir="${instrumented.dir}/com/pentaho/mgmt">
			<fileset dir="../core/src/com/pentaho/mgmt">
				<include name="**/*.xml **/*.xsl **/*.js **/*.html **/*.png **/*.css" />
			</fileset>
		</copy -->

	</target>

	<target name="init-pentaho-coverage-reports" depends="clean-pentaho-coverage-reports">
		<mkdir dir="${coverage.xml.dir}" />
		<mkdir dir="${coverage.html.dir}" />
	</target>

	<target name="compile" unless="pentaho.compiled">
		<mkdir dir="${classes.dir}" />
		<javac destdir="${classes.dir}" debug="yes" source="1.5" target="1.5" fork="true">
			<src path="../core/src" />
			<src path="../console/src" />
			<src path="../metrics/src" />
			<src path="../skineditor/src" />
			<src path="../diagnostics/src" />
			<src path="../ui/src" />
			<src path="../settings/src" />
			<src path="../solutionrep/src" />
			<src path="../ldapconfig/src" />
			
			<!-- classpath refid="src-classpath" / -->
			<classpath refid="pentaho_classpath" />
		</javac>
	</target>

	<target name="compile-tests" depends="compile" unless="pentaho.compiled">
		<mkdir dir="${testclasses.dir}" />
		<javac destdir="${testclasses.dir}" debug="yes" source="1.5" target="1.5" fork="true">
			<!-- src path="../core/src" / -->
			<src path="../core/test-src" />
			<!-- src path="../console/src" / -->
			<src path="../console/test-src" />
			<src path="../metrics/test-src" />
			<src path="../skineditor/test-src" />
			<src path="../diagnostics/test-src" />
			<src path="../ui/test-src" />
			<src path="../settings/test-src" />
			<src path="../solutionrep/test-src" />
			<src path="../ldapconfig/test-src" />
			
			<classpath>
				<pathelement path="${classes.dir}" />
			</classpath>
			<classpath refid="pentaho_classpath" />
			<classpath refid="test-lib-classpath" />
		</javac>
		<copy todir="${testclasses.dir}">
			<fileset dir="../core/test-src" excludes="**/*.java"/>
			<fileset dir="../console/test-src" excludes="**/*.java"/>
			<fileset dir="../settings/test-src" excludes="**/*.java"/>
			<fileset dir="../metrics/test-src" excludes="**/*.java"/>
			<fileset dir="../diagnostics/test-src" excludes="**/*.java"/>
			<fileset dir="../solutionrep/test-src" excludes="**/*.java"/>
			<fileset dir="../ldapconfig/test-src" excludes="**/*.java"/>
			<fileset dir="../skineditor/test-src" excludes="**/*.java"/>
			<fileset dir="../ui/test-src" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="instrument-pentaho-classes" depends="init-instrument-pentaho-classes">
		<!--
			Instrument the application classes, writing the
			instrumented classes into ${build.instrumented.dir}.
		-->
		<mkdir dir="${instrumented.dir}" />
		<mkdir dir="${classes.dir}" />
		
		<cobertura-instrument todir="${instrumented.dir}">

			<fileset dir="${classes.dir}">
				<!--
					Instrument all the application classes, but
					don't instrument the test classes.
				-->
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>

	</target>

	<target name="test" depends="init-pentaho-test-reports">

		<delete dir="../test/run"/>
		<mkdir dir="../test/run"/>
		
	    <copy todir="../test/run">
	    	<fileset dir="../test/files" includes="**/*"/>
  	    </copy>

		<junit fork="yes" dir=".." failureProperty="test.failed">

			<!--
				Specify the name of the coverage data file to use.
				The value specified below is the default.
			-->
			<sysproperty key="net.sourceforge.cobertura.datafile"
				file="${basedir}/cobertura.ser" />
		
			<!--
				Note the classpath order: instrumented classes are before the
				original (uninstrumented) classes.  This is important.
			-->
			<classpath location="${instrumented.dir}" />
			<classpath location="${classes.dir}" />

			<!--
				The instrumented classes reference classes used by the
				Cobertura runtime, so Cobertura and its dependencies
				must be on your classpath.
			-->
			<classpath refid="pentaho_classpath" />
			<classpath refid="test-lib-classpath" />
			<!-- classpath refid="test-src-classpath" / -->

			<classpath>
				<pathelement path="${testclasses.dir}" />
			</classpath>
			
			<formatter type="xml" />
			<test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
			<batchtest todir="${reports.xml.dir}" unless="testcase">
				<fileset dir="../console/test-src">
					<include name="**/*Test.java" />
				</fileset>
				<fileset dir="../core/test-src">
					<include name="**/*Test.java" />
				</fileset>
				<fileset dir="../settings/test-src">
					<include name="**/*Test.java" />
				</fileset>
				<fileset dir="../metrics/test-src">
					<include name="**/*Test.java" />
				</fileset>
						<!-- fileset dir="../diagnostics/test-src">
							<include name="**/*Test.java" />
						</fileset -->
						<fileset dir="../solutionrep/test-src">
							<include name="**/*Test.java" />
						</fileset>
						<fileset dir="../ldapconfig/test-src">
							<include name="**/*Test.java" />
						</fileset>
						<fileset dir="../skineditor/test-src">
							<include name="**/*Test.java" />
						</fileset>
						<fileset dir="../ui/test-src">
							<include name="**/*Test.java" />
						</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${reports.xml.dir}">
			<fileset dir="${reports.xml.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.html.dir}" />
		</junitreport>
	</target>

	<target name="coverage-check">
		<cobertura-check branchrate="34" totallinerate="100" />
	</target>

	<target name="coverage-report">
		<!--
			Generate an XML file containing the coverage data using
			the "srcdir" attribute.
		-->
		<cobertura-report destdir="${coverage.xml.dir}" format="xml">
			<fileset dir="../core/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../console/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../settings/src">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
			
	</target>

	<target name="alternate-coverage-report">
		<!--
			Generate a series of HTML files containing the coverage
			data in a user-readable form using nested source filesets.
		-->
		<cobertura-report destdir="${coverage.html.dir}">
			<fileset dir="../core/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../console/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="../settings/src">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>
	
	<target name="zip-reports">
		<mkdir dir="${dist.dir}"/>
		<zip destfile="${dist.dir}/open-source-reports-${current.date}.zip">
			<zipfileset dir="${reports.dir}" prefix="opensource-tests" />
			<zipfileset dir="${coverage.dir}" prefix="opensource-coverage" />
		</zip>
	</target>

	<target name="coverage" depends="clean-all,compile,compile-tests,instrument-pentaho-classes,test,coverage-report,alternate-coverage-report" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports." />

</project>
